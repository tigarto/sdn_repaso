URL: https://docs.pylonsproject.org/projects/webob/en/stable/do-it-yourself.html

def application(environ, start_response):
  start_response('200 OK', [('Content-Type', 'text/html')])
  return ['Hello World!']

-----------------------------

from webob import Request
req = Request.blank('http://localhost/test')
resp = req.get_response(application)
print resp

-------------------------------------

req.environ['HTTP_HOST']
req.host
req.path_info

------

from webob import Response
resp = Response(body='Hello World!')
resp.content_type
resp.content_type = 'text/plain'
print resp

----------------------------------------

app = Router()
app.add_route('/', controller='controllers:index')
app.add_route('/{year:\d\d\d\d}/',
              controller='controllers:archive')
app.add_route('/{year:\d\d\d\d}/{month:\d\d}/',
              controller='controllers:archive')
app.add_route('/{year:\d\d\d\d}/{month:\d\d}/{slug}',
              controller='controllers:view')
app.add_route('/post', controller='controllers:post')

--------------------------------------
import re

var_regex = re.compile(r'''
  \{          # The exact character "{"
  (\w+)       # The variable name (restricted to a-z, 0-9, _)
  (?::([^}]+))? # The optional :regex part
  \}          # The exact character "}"
  ''', re.VERBOSE)


def template_to_regex(template):
  regex = ''
  last_pos = 0
  for match in var_regex.finditer(template):
    regex += re.escape(template[last_pos:match.start()])
    var_name = match.group(1)
    expr = match.group(2) or '[^/]+'
    expr = '(?P<%s>%s)' % (var_name, expr)
    regex += expr
    last_pos = match.end()
  regex += re.escape(template[last_pos:])
  regex = '^%s$' % regex
  return regex

--------------------------------------

import sys

def load_controller(string):
  module_name, func_name = string.split(':', 1)
  __import__(module_name)
  module = sys.modules[module_name] 
  func = getattr(module, func_name)
  return func


----------------------------------------
from webob import Request
from webob import exc

class Router(object):
  def __init__(self):
      self.routes = []

  def add_route(self, template, controller, **vars):
      if isinstance(controller, basestring):
          controller = load_controller(controller)
      self.routes.append((re.compile(template_to_regex(template)),
                          controller,
                          vars))

  def __call__(self, environ, start_response):
      req = Request(environ)
      for regex, controller, vars in self.routes:
          match = regex.match(req.path_info)
          if match:
              req.urlvars = match.groupdict()
              req.urlvars.update(vars)
              return controller(environ, start_response)
      return exc.HTTPNotFound()(environ, start_response)

----------------------------------------

from webob import Request, Response
from webob import exc

def controller(func):
  def replacement(environ, start_response):
      req = Request(environ)
      try:
          resp = func(req, **req.urlvars)
      except exc.HTTPException, e:
          resp = e
      if isinstance(resp, basestring):
          resp = Response(body=resp)
      return resp(environ, start_response)
  return replacement

--------------------------------------------------


@controller
def index(req):
   return 'This is the index'


---------------------------------------------------



@controller
def hello(req):
  if req.method == 'POST':
      return 'Hello %s!' % req.params['name']
  elif req.method == 'GET':
      return '''<form method="POST">
          Your name: <input type="text" name="name">
          <input type="submit">
          </form>'''
hello_world = Router()
hello_world.add_route('/', controller=hello)

------------------------------------

req = Request.blank('/')
resp = req.get_response(hello_world)
print resp
req.method = 'POST'
req.body = 'name=Ian'
resp = req.get_response(hello_world)
